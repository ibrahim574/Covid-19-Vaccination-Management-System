<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxAPEhAQEBAWFRAVFhUZFhcWEBYVGRcbGBUWFxUVFhYa
        HSkgGh0lGxgVITEjJSorMS4uFyAzODMtNyotLiv/2wBDAQoKCg4NDhsQEBstJiAmLS8uMzgyNS0vKy0r
        NSstLzctMCsvLS0vLS0tLy0tLS8tLS0tLS8tLS8tLS0tLzUtLS3/wAARCAByAboDASIAAhEBAxEB/8QA
        HAAAAgEFAQAAAAAAAAAAAAAAAAIDAQQFBgcI/8QAShAAAgECBAMGAgUIBgcJAAAAAQIAAxEEBRIhMUFR
        BgcTImFxMoEIFEJykSMzNVJic7GyFYKSobPRNFR0orTh8RclQ4OTlMHS8P/EABoBAQADAQEBAAAAAAAA
        AAAAAAABAgMEBQb/xAAwEQACAQMCBAQGAgIDAAAAAAAAARECAyExQQQSUfATYXGhFCKBkbHBMtFS8SNC
        4f/aAAwDAQACEQMRAD8A5CBHAigSQCAVAjgSgEkIHL04+2/98AAI4EoBHAgFQIwEAI4EAoBHVb7CAEno
        m19tyCPb1kNlqEnUk3A9XAsqhyRvba+++/CW+m3Hb5TI4UrqQEDTp4k6z0F/bf52k2HwdXE+LpsUp3LH
        Vc2C3BsfNfa3/SYK9/kepe4ChU81ufTWfriPwiDK6FNwXIJUddtuv/KLmSpc6LE32A2HDe/tIcNg6tKq
        yBwyMQC4BKrcXIJ6rfeZI9nWKsadRKhJbyi6liLbC59QJGeaWzX/AI3YSpt650ek6z5a6+slvgsvSoly
        wVjwN9hxO8xhW0vqNB0U021LubKVNxbY7cZbeEeQ/wD3tNLbeZZx8bTQ+Xw6dstZ9l06+ZARFIl14J5i
        390kxeBNNVe4KnoeHoZfnUxJzfD3eTxOXHe2pjyIhEmIiESxiRERCJKRFYQCEiIRJSIhEAiIiESUiRkQ
        CIiKRJCIpEAiIlDHIikQBYQMIAQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBKWlZSA
        X6xxFEkEAYCOBFEkEAqBHAlAI4EAqBLnD0C5PQC5PQSACXSKyLfgG29TK1OFg2sU01VrmmN46D0qKMCQ
        1uFr7aieQHKZvsv2fGLcqtZVqKQ2ki4ZARqJPuQLess6ORYs4dHo0y5qmymwCrxAYtfjx/CP2bw2Nw2P
        ZGQr5GVtTKLKdJZ1J24gcOM5+ZtOXg9Ku1aSXh0/NE4b/vuV1Zsfa1cFh6dSiuGL1ainzU6RsrD4fNay
        24/jMb3aZQ/iNiK1Xw6JVl4XZuJAH7PH8JtWKzGjhKdNqw1NVLEAWIIsQQ9za3OaxlebmrWpVCqrTuGW
        mpOlQ9gtwbgAtpYgW42lq+VLkXp6fkzs2r91VVtxq/XGiyoXfkXPbfLUWma6Ib0z5gCArLckF1576Sbc
        trxezFDxHurAgIpHl+0SoDWXYAKV24+bpDtMj4mk60KpLgNsSAHBY3Uta3Db0tuZguyGCq4jEMmvR4dr
        i5B1JqVrW246dztfhteXqtzUmY2uMdFmq3108vfodALlb6qOpV3DgAnhsAJpPaPELXxFLTQNOqyWYBrA
        31Eq1huRb04mb3l2Y0qzVlUGyNYkvfyhidXGwANzxJt0vths5yzDozYlFDVb62pa9V9KWso+Im4tbo49
        pFS5k+V9S1itWbq8WmMLRZ09d1v1+xrua5degC1MjzeVyG9Lkk9RwvLBCXBppSuH4nndeDf3Tp+XvRx9
        BqdkNVQQVsdDso3psfstw2O4M5i2Dq0WfxKTp4l1RADquD5gG5bc+kzqo5Vg7rXFfEVvnSS0jdpzGvlj
        GXKgx+KwzUiL891PUdZaETOMFxKEILNTDEXO9hxW/oBMKZtbq5l5nl8Zw/g3IX8Xld+Tx9iIiIRJSIhE
        0OUiIiESVpGRAI9JOwFzEdCDYix6GXWGrtSdai/EpuLi8pjMU9ao1Vram3OwA/CRmfLvuSyVPLrn2j/e
        I9yzIikRzEJklSMiKRJDEMAQiLHMUwCkIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAS
        krKQDIrJBEWOIA6yQRFkiwBlkgiLJBAJaKX3tsOP/WPmGKIKuSSGX4RT3HXzyuIxmlAqruLXt9q/C8yH
        Z9lSoK1VQy0zfSfhZuCrfrz+U56qk3nB7Fm1Vbt8tHzNw3tH6a1mcauGbB2YzkNhQqIVWkdyWuCzblhf
        gbcuV5c5FiUr1qhaqfFRvKGKnUBfUST1F/Lx2MxdPPDZk8JEAcsmlLFtQJK2GzWOk36XmHw+GdVVgpZb
        nRY7mzeR9ztfhub7Q629MijhaVzeJFLnDnSI0nzf2UKEbjiK5NWqdfiK5OoOAyAC50qL2G/HYm4GxtNZ
        w7KauuiAF1ixuT+TBXU3Ik2F97cbTI1cjf6sgC6NRAfTdQSRqII253JKnhf1mLQLR8NV8zliLG6AgD4g
        eNwCATz0CwHGTXyJLvvzMOEV+qqrkqw4lvPVJxrOqRv74ZClqdQBCRdtWsta9wh4sbAGwNzsOINtdzCj
        Swpr4ihqRKmhHd9VOzXI1KSOV3G1geYJlcszZtIogFdJF9JW27XvrY2O1yUO5VZl6mGo4ik3i2NOzWWp
        +T3uzU9LAC9yQLkE7BltLUpVU82k9+xjXNm9yRzcrxjXLe3WfM1bKcJiDV8WhSNwADZtJJdtJYqCPslQ
        Da9z+GzYzM9At4bKg0EsUc2OwsNviDbXGrgDax2tMG5o1qZqVdT1KldSoZGXzPrFMBbX0eHxa1iu1tW+
        dxeBFTxKdz4gBI06VYBm/JgMW8y2IHMXO/CwUW0pTL8VxnjNNKI33/W+dJnfWZcqr0gviNXtoZ3OsoqX
        ba/EbqS3r15S37R4/DVqgq02N6JC1bcASNIYHgSDx9DNHx+V41Kgo0sIxUgEAJxQ7W1KLBjzvvsOPGbN
        3cLTrfWaVezeOpVvIygWVV0rqGrgL79DxvKVOX4cYePp+ja3Zppt/EKqakp2iZ6t56bfTfTMTi6QaqKK
        EpqNiT52AHC/qbyzx+ECaWU+VuHp+zfnMtn2R0qNRqVGoXFE7OCNyR68QL8ucjqFcRQYA3eioLXuCD9u
        /wCEpRVyv2Z2X+H8Wy93E0+e8bYjb95NeMjMlMjadZ8+RmUdCLEjY8PxtGaRmCSMyNpI0QwQRmIY7TOd
        iey1TNsUmGQ6UA1VXtfQgNiQObEkADqegMA108hzPAcz7CVr0XS2tGW/DUhW/tcT1B4eTdnKCsQlEHYM
        VNStVI47gF34+wvyEjyLvEynM3+qpU877CnWpFRU9Bfyk+l7npAPLpMWdi75u7qjhaZzHAoKdMMBWpLs
        i6jZaiD7I1EAqNtwRbeaB2C7J1M3xS4dDppgaqtS19CA226sTsB8+AMA1wdOfSS1sPUQAvTZQeBZGUH5
        kT1KuHyfs7hwxFPDpw1lddWqfcAu552Gw9BLLAd7GTYl/BNcpq2BrUmRD7sdgPvWgHmKUJnoLvN7rKGI
        pPisvpLSxKAs1NBZKwAuQFGyvzBHHgeNxqn0fs2RcVXwVQKVrprp6gD56fxAX6oSf/LgHKQYTsX0hsgF
        OphMbTUBXU0XsABqW70z7kGoP6gnHQDyFzyHX0gFLjrDUOs9X5TluHyjK6fi00Iw2HL1DpBuwUvUt7uW
        t7zRvo/v9Z/pStWVWd61N28otdxUZrDkLmAcKBlNQ6zfu/OmFzWsFAA8KjsBb7E9CucPh8McRVRRTpUd
        bnwwSFRNTGwFzsDAPHmodZUGelV70ezzbGqAD+tg6lvn5JL2i7A5VnOH8bDLSSo6k0sRQCgE/thdnFxY
        33FjYiAeZYS6zPA1MNVq4esumrSdkcdCpsbdRzB5giWsAIQnRO7nuxxGYOlbE02pYEEElgVasOOmmOIU
        826Ha54Ac6BHWVnpnvtULk2IAFgGoAACwAFZLATzpkeWVMbiKGFpfnKrqgJ4C53Y+gFyfaAWJMoDPUVP
        B5R2Zwq1GULwU1DT11qz2J4gX5E2FgPSSmhlPaXCswVai7rr0aK1FrX2JF1PA8wfUQDyzCZXtRklTLsV
        XwdU3ak1gwFg6kBkcDldSDbluJioASkrKQDJLJlU2vbbrIVkiwB1kixFjrAJBJFkayRYA6rztNhyHKDX
        Wx4t+bGxu1/NdfYWmJDAUhs253tzPLbjLrsrjGp4mmSQKSPZ2G1iwIVd5i6lU4PQVi5bpVyly4nfH5lR
        tjfoT1eydYBjVc0tRvZkBItbdDfyC/vM1QwgoHSfOiWU+Y7hQF2PL4m36CZHMMfbF0KSsAdLMC5tqsCb
        ehva3tLEUgqgKtlPItsLnU173uD5b+/vLUpJ8q6d9yYXbldxeI+uFt16/lGwYemzFXYLoLAqrVDYFmAR
        zcm/EAD7thaYbtNh6aUS1QXqE2N0VSLqo0UwBdUFnJ5nVvtptjc2ziqldaauzMyAFPEK7C12LAjh047m
        YntBj6lYqSt0qXsqa01FRdAbMfLYBrhVtbfpK01Ur5Tavh7ypV5PZaaqUsQvVaesKc5TA03RahQNrCqF
        vTvcXIYW4lRY9LX9TFXMatXEJ4haoGW5S4ApFbWIXjv5uH6o23knZ3EK6tVDaaBZKeq4phrlgNIXzElm
        A3bfew0g3uqyUKr1bAsSwYnToAPxKl9B1GxUnUTa9ha1hFy26lFL+hpwnGU27nNdWW053j09On20auUw
        lTxnenTOkaazu+rcU2bwqKKSoLEio9zZb1FYgnc364pUpWDflFqVAoLrUNwxOm/mAsChJ32Bvp3lzgq9
        HVo1M/m1/F5mu66gdN221J0ve5v575XFYQEWSnalVUMdxYEKqBdStq1BeY4hLb2JmsudO+/vszz4p777
        6GrYHNKNetQNe9N1caSa+kFbvawBBIYH7QAIO/SQ9qMvaviKSYPEUb1tdxTqafMzE3bRdbNYDcgmx43m
        PzfKa2FZnQXLHZGbckBTb9tyTwB2t04Zju1wmvG69BAohxYBWsxckCovGnpYOBfe9htMa383LHf6PT4W
        1QrXiqvRNtRvGk77ekrSTVRleJwmJNLFA0sQENyPDdCgOzKTw+Q5C/KY7FY1iXCmykngLXF9rnnNw71c
        8LYl8MGICN5ujXUWH8Zp6YB2ptVG6D+I4gyaVTTU5IuXOIvWVTQnhNt9fp6a9W/vj2iNJGEjabnlEZkb
        SRohgEbSNpI0jaARtO5fR4wSjDY3EW871xTv+zTpqwH41GnDmncvo84xThcZQv50rh7fs1KaqD+NNoBo
        HfXmL181xCMfJQWnTQdAaa1GPuWc/gJoqOyMrKSrKQVINiCDcEHqDN676suehm2Idh5K606iHqBTWmw9
        wyH8RNHw9B6rpTpqWqOyqijizMQqqPckCAbHn3eLmuOR6VfFfkXFmppTRFI5gkDUfxnVPo7YFVwWJxFv
        PUr6L/s00XSP7Tv+M0ftf3R4vL6NTEjEUatCmupyb0nHspuD/auek3z6PGLVsBiKN/NTxDEj9l6aFT+I
        f8IBzfvszapiM1rU2b8nhwlOmvIeRXc26lmO/QL0mhzeO+fLXoZtimYeWsEqoeoKBW/B1YTR4B6b7ks3
        bFZVSDsWag70bnjZbMg+SOg+U4vn1b+iM8rVaWwoYvxAosPI5DtTHoUdl+c7L3G5Y2HyumzAg16lStY9
        DpRD7FUUj0M4X3kY1a+aZhUXdfGZQevhgU7/AO7APQ3eVlK5llWIWn5j4YrUSN7lBrXT95br/WnA+6fJ
        vruaYRCL06beM/tSsy39C+gfOdr7k88+t5ZSpsb1MMTRa/6qgGkfbQVX+qZB3YdjP6OxebVCtlNbwqG1
        rUrCtseYtUpr70zALTv/AM78DA08Ip8+Jff93Sszf73hj5mYv6Nv5vMfv0f5Xmj99GefXM0rKpvTw4FF
        d9rrc1TbrrLL/UE3j6Nv5vMfv0f5XgGl9+/6WrfuqP8AJO7drv0Rjv8AYa3/AA7ThPfv+lq37qj/ACTu
        3a79EY7/AGGt/wAO0A8lTuP0cswdkx2GY3poaVRB0L61f5HQn984dO2/Ruwjf941yPIfBQHqR4jMPkGT
        +1ANa7/MEtLNdai3jYek7erBnp/wRZzedT78KiV85w1Em4Slh6bi/wCvVdiL8vK6/jOk/wDZFkf+rN/7
        qt/94B5ry1wtaizGyipTJJ5AOCT+E7l2j74adStRwmWgsHq00euylQFZ1BFJDuSQT5ja3IHiNN75+yeC
        yx8GuCplBUWqXvVd7lTTC/ETb4jNGyD/AErCfv6P+IsA9G9+X6HxP36H+Mk4l3R10p5xgGcgAvUXf9Z6
        NREHzZgPnO29+X6HxP36H+Mk8zUqhQhlYqykEMDYgg3BBHAgwDu30jMHUbD4OsoJpU6lQORwBdV0E9B5
        WF+pHWWf0b8NUH9IVrEUW8FQbbM6+ISAeZAYX+8JJ2b77sO9EUsyoOaoFmekiulQdWQkFSeYFx7cJt3Y
        Xt3SzXEVaODwxp4ShSBLOFVizvZQqKSFWyueNzfgLbgcy+kPhguYUKg/8TDLf3WpUF/wI/CctnVPpEYg
        NmGGpj7GGBP9arU2/BR+M5XACUlZSAZJZIsiWSCASLJFkYjiASrHWRiOIBd4cvuE/jLmgLoVKAbte5a5
        tawAGzfPrLPDne3XbjaXVbFfVzdW8xAG++kHa49Zy3Vk9vgK14UtvGHktMbgsRUKsFNRxbc1C4S2wS5G
        xtYzc8txLMtNag0uyE6dW7AXB8v2hvIeymP+sUSHt4ikg7cRfYzMtSUmnqQE09QW32b+b52YAj2mylLG
        TzbtVNyt/wDXZfffGmrwp8mY76n4r62ZtBHl8MhtJp+Xc2v5gpvcfaI4gyGtgn8jUwQ6AbA38p0h9t/L
        YsN/TfhLqoGoK17kW1G9rAGxII9wf7REtUzqmW01KNT8mAwIKAedltpXje9tj0It0ctC13LK7xFynExT
        GmEoXlvC1/AZRnC0tFLR5AT5LIGVr+UaTwLWY+gHK8lzjFeLrNK53N3ICg7bkamAsLhbm/AC/SxzFsTX
        ZWSnwO4DXUuqjVRZuF9Q03FrEHYTOZLh61MFa3wgOR5SNyhGhQDcC/M+YWJBt8VKa3zxGPT3Oi5wtHw6
        rn54nLWVGizsoj7awac31hgpqqwovcMA5QafMCDqAbTd7m431j0E2vszn+lm8WuQWuLPVsUaxNkBFiTZ
        rkWJ1b3vNhqdm0rUaFLX4NMq+hV0edLqQpQbMAg2JN+F77xKPYnD0PympyV1WY2B8I6nUArv9lRe+4HA
        aoc1tVUOV64I4a7Yosui7q/LKWNH+NuqNb7VdrzQqBEsGupGpS4Qly7Egdfh25cJ0DsLm2W4t6z4Rl8d
        yHqjQ6EtxJUONxfWTbmxJ476vju7+lVFarXqmmSPiH2AvmUb7EfEDtz9JpnZ7BVtHkqFAd1cVGpmifDY
        eU8b2Y2sftAGLlfI5ff+iOF4fx6aqaanjtfR4b8/Qm7z8xojMMT4abhwGN73NgC1unL5SzfFaKBAuPG4
        DgLc2AHWRVcXTau1TTamxNw3mO/G55m9z85a43FGppHBFFlHQQqG6srzNXxVNFhqirL+VY02b9GtPcsz
        EMZojTc8kQyNo7RGgCNE236xjIzAKNM72H7VVMpxS4lBqpkaKtO9taEg7ftAi4PuOBMwBiGAen3OT9o8
        OoJSuo3A1FKtInjcAh04b8jbmJHkHd9lWVOcUiWdAbVa1W/hg8SL2Vdudr8d55gvYgjYjgRsR7HlK4iu
        9S3iOz24a3Zre1zAOqd8veHSxqjAYJ9dAMGrVR8NQqfKiHmoO5PMgW2G+o923bFsoxXikFsNUASug46b
        3V1/aUk+4JHO41MykA9WZnlOV9osMjFlrU9zTq0201KZYC4BtdTwurDkLjYTXsq7lMso1BUqNWrqpuKd
        R0CH72hQW9r26zz3g8ZVoNro1Xpv+tTqMh/FSDL+v2nzCopWpj8UyniGxdZgfkWgHfu8rvEw+WUXw2Fd
        WxpXQqJYihtbU9tlIHBePDa081k9dz1/+YAQgHTO4LO/q+YPhmNkxVMgfvKd3Tf7vij3IneO1GcLgMJi
        cW1rUqbMATa7Wsi/Nio+c8e03KkMpIYbggkEeoI4Satj6zgq9aoyniGqswNtxsTAIatVnZnckuxLMTxJ
        JuSfc3ncfo2/m8x+/R/lecMk2HxdWnfw6jpfjpdlv0vY7wDee/j9LVv3VH+Seh8Tl6YrCNhnYhK1A02K
        2DAPT0krcEXseYM8eVqzVDqdmZurMWP4mXAzTEf6xV/9Z/8AOAd8p9xmVggmviyOhq0gD72pAzOZlneV
        dnML4KaVKglKCPqq1GPNr3O/N22FvYTzM2ZYg7HEVSPWs/8AnLQCAX2d5nVxtetiqxvVquWa3AX4KPQC
        wHoBLHSOkrCAUAmQyD/SsJ+/o/4iywlQbbjYjh/nAPTnfj+h8T9+h/jJPN2TY0YbEYeuUDilURyhAIcK
        wLKQdtxcfOR1sfWcaXrVGXo1VmHpsTLeAeps47P5fn+Bpik4FFitSlUohQVYAixW3RmBU8D0Ii9nsiy/
        s1hKzvWspIarWqWDOQDoRVHG1zZRc3Y9Z5ny7NcThrnD4irRJ4+FWenf30kXi5hmdfEkNiK9Ssw4GrVe
        oRfjYsTaAZHtn2gbM8biMWwKiowCKfsooCop9bC5tzJmEhCAEpKykAyKxxIxHEAlEcSMRxAJVjrIgZID
        AJUa0KiFmDE3XmLRRHBkOlPU0ou10JqllxhcwqYMs6ICCDtfbc7N8ptnZfPhXVFb86dTNtYWU+VlJ2It
        b2mpVyai2VgOtxxHMXJmXyvMFSm+tSW0qKYQcBwYbfw9JzzVSu/fy6npV27d2v5Mz6aKJjo/pmYM52kr
        O1JVo0y6OfM9xp03AsedibbmwllgcHXDkmmUFTYkXepb4NYceVCLk2A35EcZbZbhcaKjmnVLDQSqEjSS
        LXFuHHTwmxZfhq2JF6immNrEra5ZgvAXFr3+cl8tb5pjZE013OFTtOicNvOzxOmMTprrBDRykOV0NTSm
        GsaZBZgCzAlQPtEBTcD7I6m65phKwDMFNnDDVbjdQAT6c9uA4CWXbPLDS8GklYmpVdiwUE2AAF2bgAbc
        P+c2DsnRp1sOqVGUqjEKWuzbtpDBdgo0KFHXjeXdfzxP9b/b/wAOSnh34HiRPs5ePrnEdXqafmWGxmHQ
        vWquq+UKUJvfluNwCLNtwsZvfZDMVxKDD4hwaiBB5nKl9KhgRaxYC66hvuLnpMb28qJVekpxVOmq6xp3
        vcEkEke9geI9ZksiyDK8MMPi62LFRnCeGNShRbz6VUC4Grfc8heUqb5m9vY6aKbfw6TxXOITlOW1/Xlr
        rBj+3eExdWhiPBqaKVPW7sW+L4QtNL8DYH5kzn+AxGKrUani1tSpcKh0jcrfVYW/VH982ft92oONZaSL
        opUy2wa6vvZWPXgd/WYPLcZRpqQwOo3uf4Wt7njFf8ZoRXhXTTeqov1Rj6TEfWJ/otMThwqhgwO4FvXS
        Cd/ThLImXuY4sVD5VsoJPzNrmWDGbUc0fNqcfEu34j8L+IpiGMxiGWMBDEaM0XjAIzEaMTEMAQxDHfaR
        mAIYhjmIYAsIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEpKykAvhJBIgY4MAlB
        kgMhBjgwCYGODIQY4MAmBjAyIGODAJQZd4WvpIsL23IJ42ve1rdeEsQYwaRVTKg0s3HbrVaMjjseahTR
        UIa924jT6cbnb1l9he1WLpbGrrXbTqF7WOwmGFQb+QajxMpoDC2rSbc+HofeYKh0o9KviaL1zMNRv+P3
        57GfOISvX8fFOyq5bVYXHlHlCr0v16SfJszwlBq1WnrZ9LFXbbW5C/EBwClQByHKYasEUUqfiarG7MOA
        kX1dafwVBZr6j+zfYAdTM3Q8PPbOrxE3VRNPKsbf4+sQnviM/W7zfN6mLUKyIPNfypY3/abjzlMuwRNA
        LUvxA0XvsL9OB3lkcRpLeESFPXmPWTJm9UBhcHVxuPS201rt1PKOXheLtWly1y3ldU/29teu5RmVFBF9
        ToBYj4V5fMyxJlXcncneRkzSinlRwcRfd6vm22AmKTAmITLmAEyMmVJiEwChMQmVJiEwChkZjExCYApi
        GVJikwBSYhlSYsAIQhACEIQAhCEAIQhACEIQAhCEAIQhACEIQAhCEAIQhACEIQAhCEAJSVlIBeCOIQgD
        iOIQgDiOIQgDCOIQgDCNCEAqI0pCAMISkIICKZWEEimKYQgCmUbgIQkE7MjMQwhJIEMRoQgCGRmEIAhi
        GEIAhlIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBKwhACEIQCkrCEAJSEIB/9k=
</value>
  </data>
</root>